{{ if and .Values.secrets.dockerHub .Values.segmentationJob.config.staging.schedule }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: staging-job-segmentation
  labels:
    {{- include "tracardi.labels" (dict "ctx" . "component" "jobs-group") | nindent 4 }}
spec:
  schedule: {{ .Values.segmentationJob.config.staging.schedule | quote }}
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 15
  successfulJobsHistoryLimit: {{ .Values.segmentationJob.config.staging.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.segmentationJob.config.staging.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      backoffLimit: 2
      completions: 1
      parallelism: 1
      template:
        metadata:
          name: staging-job-segmentation
          labels:
            {{- include "tracardi.podLabels" (dict "ctx" . "component" "jobs-group") | nindent 12 }}
        spec:
          imagePullSecrets:
            - name: {{ .Values.secrets.dockerHub | quote }}
          containers:
          - name: staging-job-segmentation
            image: "{{ .Values.segmentationJob.image.repository }}:{{ .Values.segmentationJob.image.tag }}"
            imagePullPolicy: "{{ .Values.segmentationJob.image.pullPolicy }}"
            env:
              {{- include "tracardi.env" (dict "ctx" .) | nindent 14 }}
              - name: POOL_SIZE
                value: {{ .Values.segmentationJob.config.staging.poolSize | quote }}
              - name: SAVE_AFTER_POOLS
                value: {{ .Values.segmentationJob.config.staging.saveAfterPools | quote }}
              - name: LOGGING_LEVEL
                value: {{ .Values.segmentationJob.config.staging.loggingLevel | quote }}
              - name: PRODUCTION
                value: "yes"
          restartPolicy: OnFailure
{{ end }}