{{ if and .Values.secrets.dockerHub .Values.bridge.rest.license.existingSecret .Values.bridge.rest.enabled}}
#
# This is the deployment for commercial REST bridge API
# This bridge includes:
#  * Async Track
#  * Webhook
#  * Redirect
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bridge-rest
  labels:
    {{- include "tracardi.labels" (dict "ctx" . "component" "bridge-rest") | nindent 4 }}
spec:
  replicas: {{ .Values.bridge.rest.replicas }}
  selector:
    matchLabels:
      {{- include "tracardi.selectorLabels" (dict "ctx" . "component" "bridge-rest") | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "tracardi.podLabels" (dict "ctx" . "component" "bridge-rest") | nindent 8 }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.secrets.dockerHub | quote }}
      containers:
      - name: bridge-rest
        image: "{{ .Values.bridge.rest.image.repository }}:{{ .Values.bridge.rest.image.tag }}"
        imagePullPolicy: {{ .Values.bridge.rest.image.pullPolicy }}
        env:
          {{- include "tracardi.env" (dict "ctx" . "license" .Values.bridge.rest.license.existingSecret) | nindent 10 }}
          - name: LOGGING_LEVEL
            value: {{ .Values.bridge.rest.config.loggingLevel | quote }}
          - name: API_DOCS
            value: "yes"
          - name: PRODUCTION
            value: "yes"
---
apiVersion: v1
kind: Service
metadata:
  name: bridge-rest
spec:
  type: ClusterIP
  selector:
    {{- include "tracardi.selectorLabels" (dict "ctx" . "component" "bridge-rest") | nindent 4 }}
  ports:
    - protocol: TCP
      port: 10000
      targetPort: 10000
{{ end }}