secrets:
  dockerHub: ""
  tracardi: ""
  bridge:
    rest: ""
    queue: ""
  installationToken: ""

apiWeb:
  image:
    repository: tracardi/com-tracardi-api
    tag: 0.8.0
    pullPolicy: IfNotPresent
  port: 8585
  replicas: 1
  ingress:
    enabled: false
    domain: track.tracardi.example.com
    ingressClassName: ""
    tls:
      enable: false
      secretName: ""
    annotations: {}

apiGui:
  image:
    repository: tracardi/com-tracardi-api
    tag: 0.8.0
    pullPolicy: IfNotPresent
  port: 8686
  replicas: 1
  ingress:
    enabled: false
    domain: api.tracardi.example.com
    ingressClassName: ""
    tls:
      enable: false
      secretName: ""
    annotations: {}

gui:
  image:
    repository: tracardi/tracardi-gui
    tag: 0.8.0
    pullPolicy: IfNotPresent
  port: 8787
  replicas: 1
  ingress:
    enabled: false
    domain: ui.tracardi.s.revma.io
    ingressClassName: ""
    tls:
      enable: true
      secretName: ""
    annotations: {}


tracardi:
  license:
    secret: ""
  logging: "info"
  apiDocs: "no"
  trackDebug: "yes"
  saveLogsInTracardi: "yes"
  installationToken: "tracardi-install"
  image:
    webApi: tracardi/com-tracardi-api:0.8.0
    guiApi: tracardi/com-tracardi-api:0.8.0
    gui: tracardi/tracardi-gui:0.8.0
    worker: tracardi/worker:0.8.0
  replicas:
    webApi: 1
    guiApi: 1
    gui: 1
    worker: 1
  port:
    webApi: 8585  # Production
    guiApi: 8686  # Staging
    gui: 8787


#scheduler:
#    manager:
#      image: tracardi/com-tracardi-scheduler:0.8.0
#      replicas: 1
#    worker:
#      image: tracardi/com-tracardi-scheduler-worker:0.8.0
#      replicas: 1
#  bridge:
#    rest:
#      image: tracardi/com-bridge-rest:0.8.0
#      replicas: 1
#      license: ""     # Leave empty if you do not want to be installed
#      worker:
#        image: tracardi/com-bridge-rest-worker:0.8.0
#        replicas: 2
#    queue:
#      image: tracardi/com-bridge-queue:0.8.0
#      replicas: 1
#      license: ""   # Leave empty if you do not want to be installed
#  worker:
#    image: tracardi/com-worker:0.8.0
#    loggingLevel: "INFO"
#    replicas: 1
#    destination:
#      syncPostpone: 5
#  segmentation:
#    image: tracardi/com-tracardi-segmentation-job:0.8.0
#    schedule: ""      # example */15 * * * * - means run every 15 minutes
#    poolSize: 100
#    saveAfterPools: 40
#    loggingLevel: "INFO"
#  segmentation-worker:
#    image: tracardi/com-tracardi-segmentation-worker:0.8.0
#    poolSize: 100
#    saveAfterPools: 40
#    loggingLevel: "INFO"

elastic:
  host: elastic-cluster-es-http.elastic.svc.cluster.local
  schema: https
  port: "9200"
  username: elastic
  password: unset
  verifyCerts: "no"
redis:
  host: redis://redis-master.redis.svc.cluster.local/1
  password: unset
  port: "6379"