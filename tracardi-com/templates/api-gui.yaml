{{ if and .Values.secrets.dockerHub .Values.apiGui.license.existingSecret }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gui-deployment
  labels:
    {{- include "tracardi.labels" (dict "ctx" . "component" "api-gui") | nindent 4 }}
spec:
  replicas: {{ .Values.apiGui.replicas }}
  selector:
    matchLabels:
      {{- include "tracardi.selectorLabels" (dict "ctx" . "component" "api-gui") | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "tracardi.podLabels" (dict "ctx" . "component" "api-gui") | nindent 8 }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.secrets.dockerHub  | quote }}
      containers:
        - name: api-gui
          image: "{{ .Values.apiGui.image.repository }}:{{ .Values.apiGui.image.tag }}"
          imagePullPolicy: {{ .Values.apiGui.image.pullPolicy }}
          ports:
            - name: api-gui-port
              containerPort: 80
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 60
          env:
            {{- include "tracardi.env" (dict "ctx" . "license" .Values.apiGui.license.existingSecret) | nindent 12 }}
            - name: EXPOSE_GUI_API
              value: "yes"
            - name: LOGGING_LEVEL
              value: {{ .Values.apiWeb.config.loggingLevel | quote }}
            - name: API_DOCS
              value: {{ .Values.apiWeb.config.apiDocs | quote}}
            - name: SAVE_LOGS
              value: {{ .Values.apiWeb.config.saveLogs | quote }}
---
apiVersion: v1
kind: Service
metadata:
  name: api-gui
spec:
  type: ClusterIP
  selector:
    {{- include "tracardi.selectorLabels" (dict "ctx" . "component" "api-gui") | nindent 6 }}
  ports:
    - protocol: TCP
      port: {{ .Values.apiGui.port }}
      targetPort: api-gui-port
{{ end }}